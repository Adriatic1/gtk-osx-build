Index: src/constfunc.py
===================================================================
--- src/constfunc.py	(revision 16449)
+++ src/constfunc.py	(working copy)
@@ -115,3 +115,18 @@
     except:
         sys.argv = temp
         return False
+
+# A couple of places add menu accelerators using <alt>, which doesn't
+# work with Gtk-quartz. <Meta> is the usually correct replacement, but
+# in one case the key is a number, and <meta>number is used by Spaces
+# (a mac feature), so we'll use control instead.
+
+def mod_key():
+    """
+    Returns a string to pass to an accelerator map.
+    """
+
+    if is_quartz():
+        return "<ctrl>"
+
+    return "<alt>"
Index: src/plugins/view/geoview.py
===================================================================
--- src/plugins/view/geoview.py	(revision 16449)
+++ src/plugins/view/geoview.py	(working copy)
@@ -45,6 +45,7 @@
 import locale
 from gtk.keysyms import Tab as KEY_TAB
 import socket
+from constfunc import mod_key
 
 #-------------------------------------------------------------------------
 #
@@ -1167,7 +1168,7 @@
         self.fwd_action = gtk.ActionGroup(self.title + '/Forward')
         self.fwd_action.add_actions([
             ('Forward', gtk.STOCK_GO_FORWARD, _("_Forward"), 
-             "<ALT>Right", _("Go to the next person in the history"), 
+             "%sRight" % mod_key(), _("Go to the next person in the history"), 
              self.fwd_clicked)
             ])
 
@@ -1175,12 +1176,12 @@
         self.back_action = gtk.ActionGroup(self.title + '/Backward')
         self.back_action.add_actions([
             ('Back', gtk.STOCK_GO_BACK, _("_Back"), 
-             "<ALT>Left", _("Go to the previous person in the history"), 
+             "%sLeft" % mod_key(), _("Go to the previous person in the history"), 
              self.back_clicked)
             ])
 
         self._add_action('HomePerson', gtk.STOCK_HOME, _("_Home"), 
-                         accel="<Alt>Home", 
+                         accel="%sHome" % mod_key(), 
                          tip=_("Go to the default person"), callback=self.home)
 
         self.other_action = gtk.ActionGroup(self.title + '/PersonOther')
@@ -1435,7 +1436,7 @@
         for index, handle in enumerate(mitems):
             name, obj = navigation_label(self.dbstate.db, nav_type, handle)
             data.append(('%s%02d'%(nav_type, index), None,  name,
-                         "<alt>%d" % index, None,
+                         "%s%d" % ( mod_key(), index), None,
                          _make_callback(hobj.push, handle)))
  
         self.mru_action = gtk.ActionGroup(nav_type)
Index: src/gui/views/navigationview.py
===================================================================
--- src/gui/views/navigationview.py	(revision 16449)
+++ src/gui/views/navigationview.py	(working copy)
@@ -49,6 +49,7 @@
 from gui.views.pageview import PageView
 from gen.ggettext import sgettext as _
 from Utils import navigation_label
+from constfunc import mod_key
 
 DISABLED = -1
 MRU_SIZE = 10
@@ -288,7 +289,7 @@
         self.fwd_action = gtk.ActionGroup(self.title + '/Forward')
         self.fwd_action.add_actions([
             ('Forward', gtk.STOCK_GO_FORWARD, _("_Forward"), 
-             "<ALT>Right", _("Go to the next person in the history"), 
+             "%sRight" % mod_key(), _("Go to the next person in the history"), 
              self.fwd_clicked)
             ])
 
@@ -296,12 +297,12 @@
         self.back_action = gtk.ActionGroup(self.title + '/Backward')
         self.back_action.add_actions([
             ('Back', gtk.STOCK_GO_BACK, _("_Back"), 
-             "<ALT>Left", _("Go to the previous person in the history"), 
+             "%sLeft" % mod_key(), _("Go to the previous person in the history"), 
              self.back_clicked)
             ])
 
         self._add_action('HomePerson', gtk.STOCK_HOME, _("_Home"), 
-                         accel="<Alt>Home", 
+                         accel="%sHome" % mod_key(), 
                          tip=_("Go to the default person"), callback=self.home)
 
         self.other_action = gtk.ActionGroup(self.title + '/PersonOther')
@@ -440,7 +441,7 @@
         for index, handle in enumerate(mitems):
             name, obj = navigation_label(self.dbstate.db, nav_type, handle)
             data.append(('%s%02d'%(nav_type, index), None,  name,
-                         "<alt>%d" % index, None,
+                         "%s%d" % (mod_key(), index), None,
                          make_callback(hobj.push, handle)))
  
         self.mru_action = gtk.ActionGroup(nav_type)
