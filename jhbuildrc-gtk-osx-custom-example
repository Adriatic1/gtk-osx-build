# -*- mode: python -*-

# The username for repositories can be overridden.
#
# repos["svn.gnome.org"] = "svn+ssh://myusername@svn.gnome.org/svn/"

# You can set the default setup here.
#
# default_build = "fw-10.4"
 
# The moduleset can be overridden.
#
# moduleset = "gtk-osx"

# As can the default modules to build.
#
# modules = [ "meta-gtk-osx-core", "meta-gstreamer" ]

# You can skip modules.
#
# skip.append("libglade")
#
#or put them back:
#
# if "libglade" in skip:
#	skip.remove("libglade")

# Set this to True/False if you want to force using or not building
# and using python as part of jhbuild. If not set, the script will use
# the system python when building on 10.5 or newer only.
#
# _gtk_osx_use_jhbuild_python = True

# Override the source checkout and installation directories.
#
_jhb = os.environ.get("JHB")
if _jhb is None:
    # The default setup...
    # checkoutroot = os.path.expanduser("~/Source/gtk")
    # prefix = "/opt/gtk"
    pass
elif _jhb == "FW":
    # The framework build...
    # checkoutroot = os.path.expanduser("~/Source/gtk-fw")
    # prefix = "/opt/gtk-fw"
    pass

# Set up a particular target and SDK:
#
# setup_sdk(target="10.4", sdk_version="10.4u", architectures=["i386"])
#
# or set up to cross-compile a ppc build from an intel machine:
#
# setup_ppc_build()
#
# or a universal build:
#
# setup_universal_build(target="10.5", sdk_version="10.5", 
#                        architectures=["ppc", "i386"])


# Modify the arguments passed to configure:
#
# autogenargs["libglade"] = "--enable-static"
#
# or simply  add to them:
#
# append_autogenargs("libglade", "--enable-static")
#
# Tell Git to use a different module and branch:
#
# branches["gtk-engines"] = ("gtk-css-engine", "bzr")
#
# Or just switch branches
#
# branches["gtk+"] = (None, "gtk-2-18")
#
# Set an environment variable:
#
# os.environ["CC"] = "/usr/bin/gcc-4.0"


# And more...
